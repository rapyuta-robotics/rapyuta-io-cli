---
$schema: http://json-schema.org/draft-07/schema#
title: Deployment
$ref: "#/definitions/deployment"
definitions:
  deployment:
    type: object
    properties:
      apiVersion:
        const: apiextensions.rapyuta.io/v1
        default: apiextensions.rapyuta.io/v1
      kind:
        const: Deployment
        default: Deployment
      metadata:
        "$ref": "#/definitions/metadata"
      spec:
        "$ref": "#/definitions/componentSpec"
    required:
      - apiVersion
      - kind
      - metadata
      - spec

  metadata:
    type: object
    properties:
      name:
        type: string
      depends:
        "$ref": "#/definitions/packageDepends"
      labels:
        "$ref": "#/definitions/stringMap"
        uniqueItems: true
      guid:
        "$ref": "#/definitions/packageGUID"
      creator:
        "$ref": "#/definitions/uuid"
      project:
        "$ref": "#/definitions/projectGUID"

    required:
      - name
      - depends

  envArgsSpec:
    type: object
    properties:
      name:
        type: string
      value:
        type: string

  deviceNetworkAttachSpec:
    properties:
      depends:
        "$ref": "#/definitions/networkDepends"
      interface:
        type: string
      topics:
        type: array
        items:
          type: string

  cloudNetworkAttachSpec:
    properties:
      depends:
        "$ref": "#/definitions/networkDepends"
      topics:
        type: array
        items:
          type: string

  cloudVolumeAttachSpec:
    type: object
    properties:
      execName:
        type: string
      mountPath:
        type: string
      subPath:
        type: string
      depends:
        "$ref": "#/definitions/diskDepends"

  deviceVolumeAttachSpec:
    type: object
    properties:
      execName:
        type: string
      mountPath:
        type: string
      subPath:
        type: string

  endpointSpec:
    properties:
      name:
        type: string
      depends:
        properties:
          kind:
            const: staticroute
            default: staticroute
          nameOrGUID:
            type: string

  componentSpec:
    properties:
      runtime:
        type: string
        enum:
          - device
          - cloud
        default: cloud
      depends:
        type: array
        items:
          "$ref": "#/definitions/deploymentDepends"
    dependencies:
      runtime:
        oneOf:
          - properties:
              runtime:
                type: string
                enum:
                  - device
              depends:
                type: object
                "$ref": "#/definitions/deviceDepends"
              restart:
                type: string
                enum:
                  - always
                  - onfailure
                  - never
                default: always
              envArgs:
                type: array
                items:
                  "$ref": "#/definitions/envArgsSpec"

              volumes:
                type: array
                items:
                  "$ref": "#/definitions/deviceVolumeAttachSpec"

              rosNetworks:
                type: array
                items:
                  "$ref": "#/definitions/deviceNetworkAttachSpec"

          - properties:
              runtime:
                type: string
                enum:
                  - cloud

              envArgs:
                type: array
                items:
                  "$ref": "#/definitions/envArgsSpec"

              volumes:
                type: array
                items:
                  "$ref": "#/definitions/cloudVolumeAttachSpec"

              staticRoutes:
                type: array
                items:
                  "$ref": "#/definitions/endpointSpec"

              rosNetworks:
                type: array
                items:
                  "$ref": "#/definitions/cloudNetworkAttachSpec"

  stringMap:
    type: object
    additionalProperties:
      type: string
  organizationGUID:
    type: string
    pattern: "^org-[a-z]{24}$"
  projectGUID:
    type: string
    pattern: "^project-[a-z]{24}$"
  secretGUID:
    type: string
    pattern: "^secret-[a-z]{24}$"
  diskGUID:
    type: string
    pattern: "^disk-[a-z]{24}$"
  buildGUID:
    type: string
    pattern: "^build-[a-z]{24}$"
  packageGUID:
    type: string
    pattern: "^pkg-[a-z]{24}$"
  deploymentGUID:
    type: string
    pattern: "^dep-[a-z]{24}$"
  networkGUID:
    type: string
    pattern: "^network-[a-z]{24}$"
  uuid:
    type: string
    pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"

  packageDepends:
    properties:
      kind:
        const: package
        default: package
      nameOrGUID:
        type: string
      version:
        type: string
      guid:
        type: string
  deviceDepends:
    properties:
      kind:
        const: device
        default: device
      nameOrGUID:
        type: string
      guid:
        type: string
  networkDepends:
    properties:
      kind:
        const: network
        default: network
      nameOrGUID:
        type: string
      guid:
        type: string
  secretDepends:
    properties:
      kind:
        const: secret
        default: secret
      nameOrGUID:
        type: string
      guid:
        type: string
  diskDepends:
    properties:
      kind:
        const: disk
        default: disk
      nameOrGUID:
        type: string
      guid:
        type: string
  staticRouteDepends:
    properties:
      kind:
        const: static-route
        default: static-route
      nameOrGUID:
        type: string
      guid:
        type: string
  deploymentDepends:
    properties:
      kind:
        const: deployment
        default: deployment
      nameOrGUID:
        type: string
      guid:
        type: string
