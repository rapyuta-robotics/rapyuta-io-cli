---
#sootballs_staticroutes
apiVersion: "apiextensions.rapyuta.io/v1"
kind: "StaticRoute"
metadata:
  name: "ims-kibarobots-2"
---
apiVersion: "apiextensions.rapyuta.io/v1"
kind: "StaticRoute"
metadata:
  name: "minio-kibarobots-2"
---
#sootballs_minio
apiVersion: apiextensions.rapyuta.io/v1
kind: Deployment
metadata:
  name: sootballs_minio_test
  depends:
    kind: package
    nameOrGUID: "MinIO File Server"
    version: "v1.0.0"
  labels: 
    app: ims
spec:
  runtime: cloud
  envArgs:
    - name: MINIO_ACCESS_KEY
      value: access
    - name: MINIO_SECRET_KEY
      value: secret_key
  staticRoutes:
    - name: FileStorage
      depends:
        kind: staticroute
        nameOrGUID: minio-kibarobots-2
  volumes:
    - execName: minio_executable
      mountPath: "/data"
      subPath: "data"
      depends:
        kind: disk
        nameOrGUID: "minio-pvc"
---
#sootballs_db
apiVersion: apiextensions.rapyuta.io/v1
kind: Deployment
metadata:
  name: sootballs_db_test
  depends:
    kind: package
    nameOrGUID: "Sootballs DB"
    version: "v1.0.11"
  labels: 
    app: ims
spec:
  runtime: cloud
  envArgs:
    - name: PGDATA
      value: /var/lib/postgresql/data/pgdata
    - name: POSTGRES_HOST_AUTH_METHOD
      value: trust
    - name: POSTGRES_MULTIPLE_DATABASES
      value: ims_db,wcs_db
    - name: POSTGRES_PASSWORD
      value: sootballs
    - name: POSTGRES_USER
      value: postgres
  volumes:
    - execName: postgres
      mountPath: "/var/lib/postgresql/data/pgdata"
      subPath: "pgdata"
      depends:
        kind: disk
        nameOrGUID: "postgres-pvc"

#sootballs_ims
---
apiVersion: apiextensions.rapyuta.io/v1
kind: Deployment
metadata:
  name: sootballs_ims_testing
  depends:
    kind: package
    nameOrGUID: "sootballs_ims"
    version: "v1.14.0-rc4-6"
  labels: 
    app: ims
spec:
  runtime: cloud
  envArgs:
    - name: AUTH_ENABLED
      value: "True"
    - name: AWS_STORAGE_BUCKET_NAME
      value: kiba-robots
    #TODO  this should be parsed from redis url in the docker container. 
    - name: CELERY_BROKER_URL
      value: rediss://inst-lrxokslpvkctnstujixsczsw-redis-srv.dep-ns-inst-lrxokslpvkctnstujixsczsw.svc:6379/5
    #TODO  this should be parsed from redis url in the docker container. 
    - name: CELERY_RESULT_BACKEND
      value: rediss://inst-lrxokslpvkctnstujixsczsw-redis-srv.dep-ns-inst-lrxokslpvkctnstujixsczsw.svc:6379/5
    - name: CONTAINER_NAME
      value: warehouse
    - name: DAYS_BEFORE_ARCHIVE
      value: "15"
    - name: DEPLOY_ON_CLOUD
      value: "False"
    - name: EODTIME
      value: "19:00"
    - name: IMS_DB
      value: ims_db
    - name: SECRET_KEY
      value: asdasd
    - name: SODTIME
      value: 09:00
    - name: TIMEZONE
      value: Asia/Tokyo
    - name: TEST_ENV
      value: asdsad
  staticRoutes:
    - name: IMS_URL
      depends:
        kind: staticroute
        nameOrGUID: ims-kibarobots-2
---
apiVersion: "apiextensions.rapyuta.io/v1"
kind: "Disk"
metadata:
  name: "postgres-pvc"
spec:
  runtime: cloud
  capacity: 4
---
apiVersion: "apiextensions.rapyuta.io/v1"
kind: "Disk"
metadata:
  name: "minio-pvc"
spec:
  runtime: cloud
  capacity: 4

